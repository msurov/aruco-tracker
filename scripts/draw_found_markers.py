import cv2
import matplotlib.pyplot as plt
import numpy as np


def draw_quad(_q):
    q = np.zeros((len(_q) + 1, 2))
    q[:-1,:] = _q
    q[-1,:] = _q[0]
    plt.plot(q[:,0], q[:,1])


def homography_pts(_H, _pts):
    pts = np.array([_pts], dtype='float32')
    H = np.array(_H, dtype='float32')
    res = cv2.perspectiveTransform(pts, H)
    res = res[0,:,:]
    return res


def draw_line(p1,p2,**kwargs):
    plt.plot([p1[0],p2[0]], [p1[1],p2[1]], **kwargs)


def draw_quad_grid(_q):
    q = np.array(_q, dtype='float32')
    s = np.array([
        [0, 0],
        [1, 0],
        [1, 1],
        [0, 1]
    ], dtype='float32')
    H,_ = cv2.findHomography(s, q)
    for i in range(0,8):
        p1 = [0, i/7.]
        p2 = [1, i/7.]
        p1,p2 = homography_pts(H, [p1,p2])
        draw_line(p1, p2, color='b')

        p1 = [i/7., 0.]
        p2 = [i/7., 1.]
        p1,p2 = homography_pts(H, [p1,p2])
        draw_line(p1, p2, color='b')


quads = [
    # [[402.636, 83.4994], [404.486, 163.762], [332.967, 166.978], [329.702, 86.8193]],
    # [[127.742, 867.183], [213.899, 860.127], [212.014, 902.107], [118.082, 910.056]],

    # [[402.303, 83.7715], [404.399, 163.717], [332.951, 166.943], [329.953, 87.0104]],
    # [[127.754, 867.262], [213.542, 860.358], [211.861, 901.853], [118.182, 909.908]],

    # [[402.234, 83.8789], [404.292, 163.652], [332.958, 166.943], [330.052, 87.0791]],
    # [[127.81, 867.343], [213.442, 860.448], [211.748, 901.748], [118.248, 909.828]],

    [[662.276, 351.722], [745.75, 435.553], [673.96, 506.762], [587.111, 423.338]],
    [[799.998, 481.297], [846.788, 474.65], [774.033, 547.044], [728.764, 551.811]],
    [[1906.22, 1268.4], [1849.83, 1200.1], [1947.11, 1156.51], [2004.96, 1222.69]],
    [[1019.51, 615.101], [1000.86, 581.993], [1079.53, 559.811], [1099.56, 590.984]],
    [[1764.47, 1334.84], [1711.59, 1261.67], [1813.36, 1216.26], [1868.61, 1285.98]],
    [[1696.13, 626.299], [1661.01, 591.11], [1733.72, 568.331], [1770, 602.495]],
]

im = cv2.imread(R'../dataset/00061_ac.png')
plt.imshow(im, cmap='gray', interpolation='nearest')
for q in quads:
    draw_quad_grid(q)
plt.show()
